import Base.abs, Base.acos, Base.asin, Base.atan, Base.cosh, Base.cos, Base.exp,
       Base.log, Base.sinh, Base.sin, Base.sqrt, Base.tanh, Base.tan

abs(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Abs>($x));"
abs(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Abs>($x));"
acos(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Acos>($x));"
acos(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Acos>($x));"
#add() =
#allreduce() =
#and() =
asin(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Asin>($x));"
asin(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Asin>($x));"
atan(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Atan>($x));"
atan(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Atan>($x));"
#avg_pool() =
#batch_norm() =
#broadcast() =
#ceiling() =
#concat() =
#constant() =
#convert() =
#convolution() =
cosh(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Cosh>($x));"
cosh(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Cosh>($x));"
cos(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Cos>($x));"
cos(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Cos>($x));"
#divide() =
#dot() =
#equal() =
exp(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Exp>($x));"
exp(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Exp>($x));"
#floor() =
#function_call() =
#get_output_element() =
#greater_eq() =
#greater() =
#less_eq() =
#less() =
log(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Log>($x));"
log(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Log>($x));"
#max() =
#maximum() =
#max_pool() =
#min() =
#minimum() =
#multiply() =
#-(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Negative>($x));"
#-(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Negative>($x));"
#not_equal() =
#not() =
#one_hot() =
#op() =
#or() =
#pad() =
#parameter() =
#parameter_vector() =
#power() =
#product() =
#reduce() =
#reduce_window() =
relu(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Relu>($x));"
relu(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Relu>($x));"
relu(x) = (x > 0) ? x : 0
export relu
#remainder() =
#replace_slice() =
#reshape() =
#result() =
#result_vector() =
#reverse() =
#reverse_sequence() =
#select_and_scatter() =
#select() =
#sign() =
sinh(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Sinh>($x));"
sinh(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Sinh>($x));"
sin(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Sin>($x));"
sin(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Sin>($x));"
#slice() =
#softmax() =
sqrt(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Sqrt>($x));"
sqrt(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Sqrt>($x));"
#stop_gradient() =
#subtract() =
#sum() =
tanh(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Tanh>($x));"
tanh(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Tanh>($x));"
tan(x::Node) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Tan>($x));"
tan(x::Parameter) = icxx"std::dynamic_pointer_cast<ngraph::Node>(std::make_shared<ngraph::op::Tan>($x));"
